<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.cstools.mapper.TemplateMapper">
    <resultMap id="BaseResultMap" type="com.cs.cstools.entity.Template">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="template_id" property="templateId" jdbcType="VARCHAR"/>
        <result column="template_name" property="templateName" jdbcType="VARCHAR"/>
        <result column="template_description" property="templateDescription" jdbcType="VARCHAR"/>
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
        <result column="last_updated" jdbcType="TIMESTAMP" property="lastUpdated"/>
        <collection property="workFields" javaType="ArrayList"
                    ofType="com.cs.cstools.entity.WorkFields"><!--column="id" select="selectField"-->
            <id column="wid" property="id" jdbcType="BIGINT"/>
            <result column="title_name" property="titleName" jdbcType="VARCHAR"/>
            <result column="field_name" property="fieldName" jdbcType="VARCHAR"/>
            <result column="field_id" property="fieldId" jdbcType="VARCHAR"/>
            <result column="field_type" property="fieldType" jdbcType="VARCHAR"/>
            <result column="field_required" property="fieldRequired" jdbcType="BIT"/>
            <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
            <result column="last_updated" jdbcType="TIMESTAMP" property="lastUpdated"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, is_send, path, description, date_created,last_updated
    </sql>

    <select id="list" resultMap="BaseResultMap">
        SELECT
        t.id id,t.template_id,t.template_name,t.template_description,t.date_created,t.last_updated,
        w.id wid,w.title_name,w.field_name,w.field_id,w.field_type,w.field_required,w.date_created,w.last_updated
        FROM template t left join work_fields w on t.template_id= w.template_id where t.id=#{id}
    </select>
    <!--<select id="list" resultMap="BaseResultMap">
        SELECT
        t.id,t.template_id,t.template_name,t.template_description,t.date_created,t.last_updated
        FROM template t where t.id=#{id}
    </select>

    <select id="selectField" resultType="com.cs.cstools.entity.WorkFields">
        SELECT
        id,field_name,field_id,field_type,field_required,date_created,last_updated
        FROM  work_fields  where template_id=#{id}
    </select>-->

    <select id="listAllTemp" resultMap="BaseResultMap">
        SELECT
        t.id id,t.template_id,t.template_name,t.template_description,t.date_created,t.last_updated
        FROM template t order by last_updated desc limit #{size}
    </select>

    <insert id="updateTemplate" parameterType="com.cs.cstools.entity.Template" useGeneratedKeys="true"
            keyProperty="id">
        insert into template (id,template_id,template_name,template_description,date_created,last_updated)
        values
        (#{id},#{templateId},#{templateName},#{templateDescription},now(),now())
        ON DUPLICATE KEY UPDATE template_id=#{templateId}, template_name=#{templateName},
        template_description=#{templateDescription},last_updated=now()
    </insert>

    <insert id="insertTemplate" parameterType="com.cs.cstools.entity.Template" useGeneratedKeys="true" keyProperty="id">
        insert into template (template_id,template_name,template_description,date_created,last_updated)
        values
        (#{templateId},#{templateName},#{templateDescription},now(),now())
    </insert>

    <delete id="deleteField">
        DELETE FROM
        work_fields
        WHERE
        template_id=#{templateId} and
        id not in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <insert id="updateField" parameterType="com.cs.cstools.entity.WorkFields">
      insert into work_fields (id,title_name,field_name,field_id,field_type,template_id,field_required,date_created,last_updated)
      values (#{id},#{titleName},#{fieldName},#{fieldId},#{fieldType},#{templateId},#{fieldRequired},now(),now())
      ON DUPLICATE KEY UPDATE title_name=#{titleName},field_name=#{fieldName},field_id=#{fieldId},field_type=#{fieldType},template_id=#{templateId},
      field_required=#{fieldRequired},last_updated=now()
    </insert>

</mapper>